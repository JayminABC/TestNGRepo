<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="10" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-10T02:42:57Z" name="Suite" finished-at="2021-06-10T02:42:57Z" duration-ms="15">
    <groups>
    </groups>
    <test started-at="2021-06-10T02:42:57Z" name="Test" finished-at="2021-06-10T02:42:57Z" duration-ms="15">
      <class name="selenium.Test1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeSuite" finished-at="2021-06-10T02:42:57Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeTest" finished-at="2021-06-10T02:42:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeClass" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="f" data-provider="dp" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="f" data-provider="dp" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="f" data-provider="dp" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="f" data-provider="dp" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test1()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="test1" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="test2" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test3()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="test3" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="beforeMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterClass" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterMethod" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterTest" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:selenium.Test1@7a765367]" started-at="2021-06-10T02:42:57Z" name="afterSuite" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- selenium.Test1 -->
      <class name="selenium.Test2">
        <test-method signature="test4()[pri:0, instance:selenium.Test2@76b0bfab]" started-at="2021-06-10T02:42:57Z" name="test4" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method signature="test5()[pri:0, instance:selenium.Test2@76b0bfab]" started-at="2021-06-10T02:42:57Z" name="test5" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
      </class> <!-- selenium.Test2 -->
      <class name="selenium.Test3">
        <test-method signature="test6()[pri:1, instance:selenium.Test3@17d677df]" started-at="2021-06-10T02:42:57Z" name="test6" finished-at="2021-06-10T02:42:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method signature="test7()[pri:2, instance:selenium.Test3@17d677df]" started-at="2021-06-10T02:42:57Z" name="test7" finished-at="2021-06-10T02:42:57Z" depends-on-methods="selenium.Test3.test6" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
element verify expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
element verify expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at selenium.Test3.test7(Test3.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method signature="test8()[pri:3, instance:selenium.Test3@17d677df]" started-at="2021-06-10T02:42:57Z" name="test8" finished-at="2021-06-10T02:42:57Z" depends-on-methods="selenium.Test3.test7" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Test3.test8()[pri:3, instance:selenium.Test3@17d677df] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Test3.test8()[pri:3, instance:selenium.Test3@17d677df] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
      </class> <!-- selenium.Test3 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
